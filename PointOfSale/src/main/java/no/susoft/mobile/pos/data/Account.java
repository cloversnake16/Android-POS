package no.susoft.mobile.pos.data;import java.util.List;import no.susoft.mobile.pos.json.JSONSerializable;/** * This class contains account credentials. This class can be publicly passed around, but can * only be created by the AccountManager. * * @author Yesod */public class Account implements JSONSerializable {    // User ID    private String userId;    // User shop id    private String userShopId;    // Name    private String name;    // Employee type    private String employeeType;    // Email    private String email;    // Phone    private String phone;    // Mobile    private String mobile;    // Security group    private String securityGroup;    // Security code    private String securityCode;    // Currently active shop    private Shop shop;    // Shops    private List<Shop> accessibleShops;    // Chain:    private Chain chain;    // Username    private String login;    // Password:    private String password;    // License    private String license;    // Chain    private String chainName;    // Token:    private String token;    // Has this account been invalidated.    private boolean isInvalidated;    /**     * @param login     * @param chain     * @param password     * @param token     * @param accessibleShops     */    public Account(final String login, final String password, final Chain chain, final String license, final String token, final List<Shop> accessibleShops) {        this.login = login;        this.password = password;        this.chainName = chain.getLoginName();        this.accessibleShops = accessibleShops;        this.token = token;        this.chain = chain;        this.license = license;        if (hasShops())            this.shop = accessibleShops.get(0);        else            this.shop = null;    }    public Account(final String key, final String license) {        this.securityCode = key;        this.license = license;        this.login = null;        this.accessibleShops = null;        this.token = null;        this.isInvalidated = true;        this.chain = null;        this.shop = null;    }    /**     * @param login     * @param license     * @param password     */    public Account(final String login, final String password, final String license) {        this.login = login;        this.password = password;        this.license = license;        this.accessibleShops = null;        this.token = null;        this.isInvalidated = true;        this.chain = null;        this.shop = null;    }    /**     * Invalidate this account. This is not reversible.     */    public void invalidate() {        this.isInvalidated = true;        this.password = null;    }    /**     * Return whether this account has been invalidated.     *     * @return     */    public boolean isInvalidated() {        return this.isInvalidated;    }    /**     * Get the token for this account.     *     * @return     */    public String getToken() {        return this.token;    }    /**     * Get the login for this account.     *     * @return     */    public String getLogin() {        return this.login;    }    public String getUserId() {        return userId;    }    public String getUserShopId() {        return userShopId;    }    public String getName() {        return name;    }    public String getEmployeeType() {        return employeeType;    }    public String getEmail() {        return email;    }    public String getPhone() {        return phone;    }    public String getMobile() {        return mobile;    }    public String getSecurityGroup() {        return securityGroup;    }    public String getSecurityCode() {        return securityCode;    }    /**     * Get the chain login set for this account.     *     * @return     */    public String getChainName() {        return this.chainName;    }    /**     * Get the chain set for this account.     *     * @return     */    public Chain getChain() {        return this.chain;    }    /**     * Get the accessibleShops authorized by this account.     *     * @return     */    public List<Shop> getAccessibleShops() {        return this.accessibleShops;    }    /**     * Does this account have accessibleShops?     *     * @return     */    public boolean hasShops() {        return this.accessibleShops != null && !this.accessibleShops.isEmpty();    }    /**     * Get the currently active shop for this account, else null     *     * @return     */    public Shop getShop() {        return this.shop;    }    /**     * Set the currently active shop for this account     *     * @return     */    public boolean setShop(Shop s) {        if (this.hasShops()) {            this.shop = s;            return true;        } else {            return false;        }    }	public void setToken(String token) {		this.token = token;	}	public void setUserId(String userId) {        this.userId = userId;    }    public void setUserShopId(String userShopId) {        this.userShopId = userShopId;    }    public void setName(String name) {        this.name = name;    }    public void setEmployeeType(String employeeType) {        this.employeeType = employeeType;    }    public void setEmail(String email) {        this.email = email;    }    public void setPhone(String phone) {        this.phone = phone;    }    public void setMobile(String mobile) {        this.mobile = mobile;    }    public void setSecurityGroup(String securityGroup) {        this.securityGroup = securityGroup;    }    public void setSecurityCode(String securityCode) {        this.securityCode = securityCode;    }   /**     * Get the password for this account.     *     * @return     */    public String getPassword() {        return this.password;    }	public String getLicense() {		return license;	}	/**     * Override to display correct text in account spinner. Returns login     */    @Override    public String toString() {        return getLogin();    }    public boolean hasSecurityKey() {        return (this.securityCode != null && this.securityCode.length() > 0);    }}